package com.leroy.practice.sharding;

import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.stream.Stream;

/**
 * <p></p>
 * <p>
 * <PRE>
 * <BR>    修改记录
 * <BR>-----------------------------------------------
 * <BR>    修改日期         修改人          修改内容
 * </PRE>
 *
 * @author luobs
 * @version 1.0
 * @date Created in 2020年05月25日 10:46
 * @since 1.0
 */
public class CalculateTable {

    public static void main(String[] args) {

   /*     String evaluateCode = "PJ20200719195559627";

        String hitting = ESharding.hitting(evaluateCode);*/

        List<String> evaluateCodes = Stream.of("PJ20200813143219374", "PJ20200813144119883", "PJ20200813144420035", "PJ20200813144520079", "PJ20200813145020363", "PJ20200813145420527", "PJ20200813145820732", "PJ20200813150020945", "PJ20200813150020946", "PJ20200813150020947", "PJ20200813150020972", "PJ20200813150321121", "PJ20200813150321130", "PJ20200813150321140", "PJ20200813150321155", "PJ20200813150421163", "PJ20200813150621319", "PJ20200813150721354", "PJ20200813150821431", "PJ20200813152722559", "PJ20200813153022707", "PJ20200813153322859", "PJ20200813154423447", "PJ20200813155123879", "PJ20200813155824232", "PJ20200813155924424", "PJ20200813160024476", "PJ20200813160024477", "PJ20200813160024478", "PJ20200813160024481", "PJ20200813160024482", "PJ20200813160024483", "PJ20200813160124526", "PJ20200813160224576", "PJ20200813160224593", "PJ20200813160324600", "PJ20200813160324648", "PJ20200813160424673", "PJ20200813161225103", "PJ20200813161625307", "PJ20200813162725911", "PJ20200813162725925", "PJ20200813162926029", "PJ20200813163326200", "PJ20200813163426251", "PJ20200813163426288", "PJ20200813163626431", "PJ20200813163726465", "PJ20200813163826490", "PJ20200813163926533", "PJ20200813164026585", "PJ20200813164226720", "PJ20200813164326749", "PJ20200813164626887", "PJ20200813164726929", "PJ20200813165127170", "PJ20200813165527401", "PJ20200813165627477", "PJ20200813165727518", "PJ20200813165827596", "PJ20200813165927721", "PJ20200813170027904", "PJ20200813170027905", "PJ20200813170027906", "PJ20200813170027908", "PJ20200813170328126", "PJ20200813170328135", "PJ20200813170328138", "PJ20200813170328158", "PJ20200813170428196", "PJ20200813170728421", "PJ20200813170728449", "PJ20200813170928584", "PJ20200813170928602", "PJ20200813171028698", "PJ20200813171729118", "PJ20200813172129467", "PJ20200813172929892", "PJ20200813173730441", "PJ20200813174130665", "PJ20200813175331271", "PJ20200813175331287", "PJ20200813175531421", "PJ20200813175631439", "PJ20200813180031961", "PJ20200813180031966", "PJ20200813180031969", "PJ20200813180031972", "PJ20200813180031973", "PJ20200813180132119", "PJ20200813180232181", "PJ20200813180332213", "PJ20200813180332264", "PJ20200813180532443", "PJ20200813180532445", "PJ20200813180532457", "PJ20200813180632506", "PJ20200813180732547", "PJ20200813181032737", "PJ20200813181032740", "PJ20200813181633109", "PJ20200813181633113", "PJ20200813182733856", "PJ20200813183134169", "PJ20200813183234190", "PJ20200813183434299", "PJ20200813183434344", "PJ20200813183934714", "PJ20200813184435119", "PJ20200813184935467", "PJ20200813184935507", "PJ20200813185035549", "PJ20200813185335777", "PJ20200813185936369", "PJ20200813190036595", "PJ20200813190036624", "PJ20200813190036627", "PJ20200813190036630", "PJ20200813190036633", "PJ20200813190036636", "PJ20200813190036638", "PJ20200813190036643", "PJ20200813190236884", "PJ20200813190236917", "PJ20200813190236953", "PJ20200813190336982", "PJ20200813190336993", "PJ20200813190337050", "PJ20200813190337088", "PJ20200813190437130", "PJ20200813190437149", "PJ20200813190437155", "PJ20200813190437158", "PJ20200813190537190", "PJ20200813190537228", "PJ20200813190537251", "PJ20200813190737395", "PJ20200813190837532", "PJ20200813191337920", "PJ20200813191438057", "PJ20200813191538091", "PJ20200813191838361", "PJ20200813192038539", "PJ20200813192038569", "PJ20200813192338763", "PJ20200813192438876", "PJ20200813193439753", "PJ20200813193639936", "PJ20200813194140345", "PJ20200813194240406", "PJ20200813194240417", "PJ20200813194640782", "PJ20200813194640798", "PJ20200813195141196", "PJ20200813195441516", "PJ20200813195641632", "PJ20200813195641680", "PJ20200813195741701", "PJ20200813195942042", "PJ20200813200042216", "PJ20200813200042219", "PJ20200813200042221", "PJ20200813200042223", "PJ20200813200042226", "PJ20200813200042232", "PJ20200813200042234", "PJ20200813200042243", "PJ20200813200042245", "PJ20200813200042250", "PJ20200813200042253", "PJ20200813200242708", "PJ20200813200342725", "PJ20200813200342759", "PJ20200813200342762", "PJ20200813200342771", "PJ20200813200442885", "PJ20200813200442960", "PJ20200813200643168", "PJ20200813200843327", "PJ20200813200943354", "PJ20200813201043393", "PJ20200813201343766", "PJ20200813201643946", "PJ20200813201944192", "PJ20200813202144415", "PJ20200813202244507", "PJ20200813202544779", "PJ20200813202544818", "PJ20200813202945113", "PJ20200813203045165", "PJ20200813203145309", "PJ20200813203245314", "PJ20200813203245365", "PJ20200813203445475", "PJ20200813203545559", "PJ20200813203645633", "PJ20200813203745654", "PJ20200813204045904", "PJ20200813204246072", "PJ20200813204246090", "PJ20200813204546321")
                .collect(Collectors.toList());


        Map<String, List<String>> collect = evaluateCodes.stream().collect(Collectors.groupingBy(ESharding::hitting));

        System.out.println(collect);




    }
}
